(()=>{"use strict";({803:function(e,o){var t=this&&this.__awaiter||function(e,o,t,n){return new(t||(t=Promise))((function(r,a){function i(e){try{l(n.next(e))}catch(e){a(e)}}function s(e){try{l(n.throw(e))}catch(e){a(e)}}function l(e){var o;e.done?r(e.value):(o=e.value,o instanceof t?o:new t((function(e){e(o)}))).then(i,s)}l((n=n.apply(e,o||[])).next())}))};Object.defineProperty(o,"__esModule",{value:!0});const n={};chrome.webNavigation.onBeforeNavigate.addListener((e=>t(void 0,void 0,void 0,(function*(){if(console.log("Navigation intercepted:",e.url),e.url.startsWith("chrome://")||e.url.startsWith("chrome-extension://")||e.url.startsWith("about:")||e.url.includes("extension/scanning.html"))return void console.log("Skipping navigation for special URL:",e.url);if(0!==e.frameId)return void console.log("Skipping non-main frame navigation");if(yield function(e){return t(this,void 0,void 0,(function*(){return new Promise((o=>{chrome.storage.local.get("approvedUrls",(t=>{const n=t.approvedUrls||[],r=new URL(e).hostname,a=n.some((o=>o===e||o===r||e.startsWith(o)));console.log(`URL ${e} approved: ${a}`),o(a)}))}))}))}(e.url))return void console.log("URL already approved, allowing navigation");const o=`${e.tabId}-${e.url}`;n[o]={url:e.url,tabId:e.tabId,frameId:e.frameId},console.log("Redirecting to scanning page with URL:",e.url);const r=`${chrome.runtime.getURL("extension/scanning.html")}?url=${encodeURIComponent(e.url)}&tabId=${e.tabId}`;chrome.tabs.update(e.tabId,{url:r})})))),chrome.runtime.onMessage.addListener(((e,o,t)=>{if("PROCEED_NAVIGATION"===e.type){const{url:o,tabId:t}=e.payload,r=`${t}-${o}`;n[r]&&delete n[r],chrome.tabs.update(t,{url:o})}if("CANCEL_NAVIGATION"===e.type){const{url:o,tabId:t}=e.payload,r=`${t}-${o}`;n[r]&&delete n[r],chrome.tabs.goBack(t)}if("APPROVE_URL"===e.type){const o=e.url;return o&&function(e){return new Promise((o=>{chrome.storage.local.get("approvedUrls",(t=>{const n=t.approvedUrls||[];try{const t=new URL(e).hostname;n.includes(t)?(console.log(`${t} already in approved list`),o()):(n.push(t),chrome.storage.local.set({approvedUrls:n},(()=>{console.log(`Added ${t} to approved list`),o()})))}catch(e){console.error("Error parsing URL:",e),o()}}))}))}(o).then((()=>{t({success:!0})})),!0}return t({success:!0}),!0}))}})[803](0,{})})();